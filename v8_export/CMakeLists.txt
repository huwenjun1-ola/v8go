cmake_minimum_required(VERSION 3.10)
project(v8_export C CXX)

#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -nostdlib++ -stdlib=libc++")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -nostdlib++ -stdlib=libc++")
set(CMAKE_CXX_STANDARD 14)
find_package(Boost COMPONENTS system REQUIRED)
if (Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    MESSAGE(STATUS "Boost_INCLUDE_DIRS = ${Boost_INCLUDE_DIRS}.")
    MESSAGE(STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}.")
    MESSAGE(STATUS "Boost_LIB_VERSION = ${Boost_LIB_VERSION}.")
endif ()
include_directories(include)
add_definitions(-DCOMPILE_EXPORT)
add_definitions(-DV8_COMPRESS_POINTERS -DV8_31BIT_SMIS_ON_64BIT_ARCH)
add_library(v8_export STATIC V8InspectorImpl.h V8InspectorImpl.cpp v8_export.h v8_export.cc)
